{"ast":null,"code":"import _classCallCheck from \"/Users/alhamfebian/Desktop/ruby-assignment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alhamfebian/Desktop/ruby-assignment/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alhamfebian/Desktop/ruby-assignment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alhamfebian/Desktop/ruby-assignment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alhamfebian/Desktop/ruby-assignment/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alhamfebian/Desktop/ruby-assignment/src/components/Todo.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RemoveTodo from '../containers/RemoveTodo';\n\nvar Todo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Todo, _React$Component);\n\n  function Todo() {\n    _classCallCheck(this, Todo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Todo).apply(this, arguments));\n  }\n\n  _createClass(Todo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"li\", {\n        onClick: this.props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, this.props.text, \" \", this.props.completed ? style = {\n        textDecoration: 'line-through'\n      } : null), React.createElement(\"span\", {\n        className: \"badge c1-bg badge-pill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(RemoveTodo, {\n        id: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Todo;\n}(React.Component);\n\nexport { Todo as default };\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/Users/alhamfebian/Desktop/ruby-assignment/src/components/Todo.js"],"names":["React","PropTypes","RemoveTodo","Todo","props","onClick","text","completed","style","textDecoration","id","Component","propTypes","func","isRequired","bool","string","number"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;IAEqBC,I;;;;;;;;;;;;;6BAEV;AACP,aACI;AACI,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKD,KAAL,CAAWE,IAAlB,OAAyB,KAAKF,KAAL,CAAWG,SAAX,GAAuBC,KAAK,GAAC;AAACC,QAAAA,cAAc,EAAE;AAAjB,OAA7B,GAAgE,IAAzF,CAHF,EAIE;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,EAAE,EAAE,KAAKL,KAAL,CAAWM,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADJ;AAUD;;;;EAb+BV,KAAK,CAACW,S;;SAAnBR,I;AAgBrBA,IAAI,CAACS,SAAL,GAAiB;AACfP,EAAAA,OAAO,EAAEJ,SAAS,CAACY,IAAV,CAAeC,UADT;AAEfP,EAAAA,SAAS,EAAEN,SAAS,CAACc,IAAV,CAAeD,UAFX;AAGfR,EAAAA,IAAI,EAAEL,SAAS,CAACe,MAAV,CAAiBF,UAHR;AAIfJ,EAAAA,EAAE,EAAET,SAAS,CAACgB,MAAV,CAAiBH;AAJN,CAAjB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport RemoveTodo from '../containers/RemoveTodo'\n\nexport default class Todo extends React.Component {\n\n  render() {\n    return (\n        <li\n            onClick={this.props.onClick}\n        >\n          <span>{this.props.text} {this.props.completed ? style={textDecoration: 'line-through'} : null}</span>\n          <span className=\"badge c1-bg badge-pill\">\n            <RemoveTodo id={this.props.id} />\n          </span>\n        </li>\n    )\n  }\n}\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired\n}"]},"metadata":{},"sourceType":"module"}