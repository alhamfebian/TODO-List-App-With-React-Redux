{"ast":null,"code":"import _objectSpread from \"/Users/alhamfebian/Desktop/ruby-assignment/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/alhamfebian/Desktop/ruby-assignment/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar todos = function todos() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [].concat(_toConsumableArray(state), [{\n        id: action.id,\n        text: action.text,\n        completed: false\n      }]);\n\n    case 'TOGGLE_TODO':\n      return state.map(function (todo) {\n        return todo.id === action.id ? _objectSpread({}, todo, {\n          completed: !todo.completed\n        }) : todo;\n      });\n\n    case 'DELETE_TODO':\n      return state.filter(function (data, i) {\n        return i !== action.id;\n      });\n\n    case 'DUPLICATE_TODO':\n      return state.map(function (post) {\n        if (post.id === action.id) {\n          return _objectSpread({}, post, {\n            text: action.data,\n            completed: false\n          });\n        } else return post;\n      });\n\n    case 'EDIT_TODO':\n      return state.map(function (todo) {\n        return todo.id === action.id ? _objectSpread({}, todo, {\n          editing: !todo.editing\n        }) : todo;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"sources":["/Users/alhamfebian/Desktop/ruby-assignment/src/reducers/todos.js"],"names":["todos","state","action","type","id","text","completed","map","todo","filter","data","i","post","editing"],"mappings":";;;AAAA,IAAMA,KAAK,GAAG,SAARA,KAAQ,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,0CACKF,KADL,IAEE;AACEG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADb;AAEEC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFf;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAFF;;AAQF,SAAK,aAAL;AACE,aAAOL,KAAK,CAACM,GAAN,CAAU,UAAAC,IAAI;AAAA,eAChBA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAApB,qBACUI,IADV;AACgBF,UAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AADjC,aAEME,IAHW;AAAA,OAAd,CAAP;;AAKF,SAAK,aAAL;AACE,aAAOP,KAAK,CAACQ,MAAN,CAAa,UAACC,IAAD,EAAOC,CAAP;AAAA,eAAaA,CAAC,KAAKT,MAAM,CAACE,EAA1B;AAAA,OAAb,CAAP;;AACF,SAAK,gBAAL;AACE,aAAOH,KAAK,CAACM,GAAN,CAAU,UAACK,IAAD,EAAQ;AACzB,YAAGA,IAAI,CAACR,EAAL,KAAYF,MAAM,CAACE,EAAtB,EAA0B;AACxB,mCACKQ,IADL;AAEEP,YAAAA,IAAI,EAACH,MAAM,CAACQ,IAFd;AAGEJ,YAAAA,SAAS,EAAE;AAHb;AAKD,SAND,MAMO,OAAOM,IAAP;AACR,OARQ,CAAP;;AASF,SAAK,WAAL;AACE,aAAOX,KAAK,CAACM,GAAN,CAAU,UAACC,IAAD;AAAA,eAAQA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAnB,qBAA4BI,IAA5B;AAAiCK,UAAAA,OAAO,EAAC,CAACL,IAAI,CAACK;AAA/C,aAAwDL,IAAhE;AAAA,OAAV,CAAP;;AACF;AACE,aAAOP,KAAP;AA/BJ;AAiCD,CAlCD;;AAoCA,eAAeD,KAAf","sourcesContent":["const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false\n        }\n      ]\n    case 'TOGGLE_TODO':\n      return state.map(todo =>\n          (todo.id === action.id)\n              ? {...todo, completed: !todo.completed}\n              : todo\n      )\n    case 'DELETE_TODO':\n      return state.filter((data, i) => i !== action.id);\n    case 'DUPLICATE_TODO':\n      return state.map((post)=>{\n      if(post.id === action.id) {\n        return {\n          ...post,\n          text:action.data,\n          completed: false\n        }\n      } else return post;\n    })\n    case 'EDIT_TODO':\n      return state.map((todo)=>todo.id === action.id ? {...todo,editing:!todo.editing}:todo)\n    default:\n      return state\n  }\n}\n\nexport default todos\n"]},"metadata":{},"sourceType":"module"}