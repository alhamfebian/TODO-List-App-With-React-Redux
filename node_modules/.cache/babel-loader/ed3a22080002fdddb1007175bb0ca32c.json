{"ast":null,"code":"var _jsxFileName = \"/Users/alhamfebian/Desktop/ruby-assignment/src/components/TodoList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nvar TodoList = function TodoList(_ref) {\n  var todos = _ref.todos,\n      toggleTodo = _ref.toggleTodo;\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, todos.map(function (todo) {\n    return React.createElement(Todo, Object.assign({\n      key: todo.id\n    }, todo, {\n      onClick: function onClick() {\n        return toggleTodo(todo.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }));\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \" Delete \"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \" Edit \"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \" Duplicate \"));\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n};\nexport default TodoList;","map":{"version":3,"sources":["/Users/alhamfebian/Desktop/ruby-assignment/src/components/TodoList.js"],"names":["React","PropTypes","Todo","TodoList","todos","toggleTodo","map","todo","id","propTypes","arrayOf","shape","number","isRequired","completed","bool","text","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,UAAV,QAAUA,UAAV;AAAA,SACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI;AAAA,WACX,oBAAC,IAAD;AACI,MAAA,GAAG,EAAEA,IAAI,CAACC;AADd,OAEQD,IAFR;AAGI,MAAA,OAAO,EAAE;AAAA,eAAMF,UAAU,CAACE,IAAI,CAACC,EAAN,CAAhB;AAAA,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADW;AAAA,GAAd,CADH,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,CADa;AAAA,CAAjB;;AAeAL,QAAQ,CAACM,SAAT,GAAqB;AACnBL,EAAAA,KAAK,EAAEH,SAAS,CAACS,OAAV,CAAkBT,SAAS,CAACU,KAAV,CAAgB;AACvCH,IAAAA,EAAE,EAAEP,SAAS,CAACW,MAAV,CAAiBC,UADkB;AAEvCC,IAAAA,SAAS,EAAEb,SAAS,CAACc,IAAV,CAAeF,UAFa;AAGvCG,IAAAA,IAAI,EAAEf,SAAS,CAACgB,MAAV,CAAiBJ;AAHgB,GAAhB,EAItBA,UAJI,EAIQA,UALI;AAMnBR,EAAAA,UAAU,EAAEJ,SAAS,CAACiB,IAAV,CAAeL;AANR,CAArB;AASA,eAAeV,QAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, toggleTodo }) => (\n    <ul>\n      {todos.map(todo =>\n          <Todo\n              key={todo.id}\n              {...todo}\n              onClick={() => toggleTodo(todo.id)}\n          />\n      )}\n      <button> Delete </button>\n      <button> Edit </button>\n      <button> Duplicate </button>\n    </ul>\n)\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}